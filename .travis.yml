language: generic
sudo: false

branches:
  only:
    - master
    - /^\d+\.\d+.*$/

os:
  - linux
  - osx

env:
  global:
    - secure: "PbVOoJ/BwDtGnx0uYvq5ec9/FyRjf+nuoeHhVRqPtF+5sIQpazWVzCDkCxFDnAAAMKbRid1FnkjcEGCb68lAo/LRQuoT2w0ZCfpAF4LfxAjFdHX6HkhWKknXxu2URKuucwdtZqZqiM4mIq6yncTQtmxpm5dbIrNKp4y2gp60ny4qBeUerj7ei5YRAbtg0uujPuM4RmjrXEc8iUi5wVmVXXv6FeBFeZovPa6sfeh3BRMZ8iW+dJuddkHkCgZhRwE9Dh/tL8tTrEdo8NI2vm3zgaPoemeM3jtkONN9HRwqbSk7WFQdxVIIugQkvr5+VBLkETS+dNy7sOg/aMTLkKVQYUYBR9LTm8x+IqXsGbawYaJomUFgFBdIxAGEoRFldMOHt7UBiGd2Z/tJc37lbNKQ4f7OiAGug1JiwBjUOmQpQ3dwg7lUsWSC1ELPmSC9q9691hNjYdIb4/nHKk/W0MkAq0162OIK2eZ3hiz609Rgrc44Ujp4LUOUhwg+H0wa64Eyrb2gekH+w8K4n01OZAacUhljZl0dV/gQ4P6nX4E9xRxqbCr6OJsR3497/yDy54T7rYFgxVCFAQT7A4vzTRsTanpmgxhWt/R7BM7Ae7PP0vlK1JXTpryXcqr/UyTaocEoLNNunNZOpQ3co7/sbbEk62ArfAVUsuDzlDY/sxp6giY="
  matrix:
    - PYTHON_VERSION=2.7
    - PYTHON_VERSION=3.5
    - PYTHON_VERSION=3.6
    - PYTHON_VERSION=3.7

install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
    else
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  # Fix the conda version before full activation
  - source $HOME/miniconda/bin/activate
  - conda config --set always_yes yes --set changeps1 no --set auto_update_conda no
  # The tests need to see the Python kernel in the root environment
  - conda install conda-verify conda-build ipykernel anaconda-client
  # We need to create additional environments to fully test the logic,
  # including an R kernel, a Python kernel, and environment names with
  # at least one non-ASCII character and one space. Because AppVeyor is
  # difficult to work with for non-ASCII content we're using env files.
  - conda env create -v -f conda-recipe/testenv1.yaml
  - conda env create -v -f conda-recipe/testenv2.yaml
  - rm -f $HOME/.conda/environments.txt
  - conda info -a

script:
  - conda build conda-recipe --python=$PYTHON_VERSION --no-long-test-prefix

deploy:
  # Upload to main label for tagged master builds
  - provider: script
    skip_cleanup: true
    on:
      branch: master
      tags: true
    script: anaconda --verbose --token $ANACONDA_TOKEN upload --user jupycon $HOME/miniconda/conda-bld/*/*.tar.bz2 --force
  # Upload to dev label for untagged master builds
  - provider: script
    skip_cleanup: true
    on:
      branch: master
      tags: false
    script: anaconda --verbose --token $ANACONDA_TOKEN upload --user jupycon --label dev $HOME/miniconda/conda-bld/*/*.tar.bz2 --force

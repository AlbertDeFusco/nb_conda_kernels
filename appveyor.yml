# Build only the master branch, tagged commits, and pull requests
branches:
  only:
    - master
    - /\d+\.\d+.*/
# Don't run the (redundant) branch build with a pull request
skip_branch_with_pr: true

environment:
  PYTHONUNBUFFERED: 1
  MINICONDA: C:\\Miniconda3-x64
  # Conda's safety checks verify that disk space and permissions are
  # sufficient to complete the requested installation command. These
  # are particularly slow on Windows and, in my view, not particularly
  # valuable in a CI context.
  SAFETY_CHECKS: --set safety_checks disabled
  ANACONDA_TOKEN:
    secure: J6mabXFRRZxAU+TjkDZv1Hh9/vZNbR6mmrV40amMMyDhXsRwcBMaiMDk2DGZo/6m
  matrix:
    - PYTHON_VERSION: 3.7
    - PYTHON_VERSION: 3.6
    - PYTHON_VERSION: 3.5
    - PYTHON_VERSION: 2.7
    # Conda 4.3 doesn't have the safety_checks config flag
    - PYTHON_VERSION: 3.5
      CONDA_SPEC: =4.3
      SAFETY_CHECKS: ""

install:
    # Because the specifics of activation need to be tested here, we are
    # fixing the version of conda *before* doing the full activation.
    - mkdir C:\Users\appveyor\.conda
    - call %MINICONDA%\Scripts\conda install conda%CONDA_SPEC% --yes
    - call %MINICONDA%\Scripts\activate.bat
    - conda config --set always_yes yes --set changeps1 no --set auto_update_conda no %SAFETY_CHECKS%
    # The tests expect to see the Python kernel in the root environment
    # Apparent bug in conda-build 3.16.2 prevents tests from being run
    - conda install conda-verify conda-build ipykernel anaconda-client
    # We need to create additional environments to fully test the logic,
    # including an R kernel, a Python kernel, and environment names with
    # at least one non-ASCII character and one space. Because AppVeyor is
    # difficult to work with for non-ASCII content we're using env files.
    - conda env create -v -f conda-recipe\testenv1.yaml
    - conda env create -v -f conda-recipe\testenv2.yaml
    - conda info -a

# Skip .NET project specific build phase.
build: off

test_script:
    - conda build conda-recipe --python=%PYTHON_VERSION%

deploy_script:
    - if not "%CONDA_SPEC%" == "" exit 0
    - if not "%APPVEYOR_REPO_BRANCH%" == "master" exit 0
    # Untagged builds uploaded to dev; tagged builds to main
    - if "%APPVEYOR_REPO_TAG%" == "false" set ANACONDA_LABEL=dev
    - if "%APPVEYOR_REPO_TAG%" == "true" set ANACONDA_LABEL=main
    - anaconda --verbose --token %ANACONDA_TOKEN% upload %MINICONDA%\conda-bld\*\*.tar.bz2 --user jupycon --force --label %ANACONDA_LABEL%

name: Build and test the package
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  package:
    runs-on: ubuntu-latest
    steps:
    - name: Retrieve the source code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build the package
      run: |
        conda install -y conda-build conda-verify
        conda build conda-recipe --no-test
    - name: Upload the build artifact
      uses: actions/upload-artifact@v2
      with:
        name: package-${{ github.sha }}
        path: /usr/share/miniconda/conda-bld
  testbed:
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest,macos-latest,windows-latest]
    steps:
    - name: Retrieve the source code
      uses: actions/checkout@v2
    - id: conda-root
      name: Set CONDA_ROOT
      run: |
          CONDA_ROOT=$(dirname $GITHUB_WORKSPACE)/conda
          echo "::set-output name=value::$CONDA_ROOT"
          echo "::set-env name=CONDA_ROOT::$CONDA_ROOT"
          echo "CONDA_ROOT: $CONDA_ROOT"
    # Use a smaller cache entry to enable a quicker exit if we
    # have already built the testbed. Any small file will do
    - id: cache-key
      name: Retrieve cache key
      uses: actions/cache@v2
      with:
        path: ./LICENSE
        key: key-${{ matrix.os }}-${{ hashFiles('testbed') }}
    - id: cache
      name: Retrieve or create the conda cache
      if: steps.cache-key.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      with:
        path: ${{ steps.conda-root.outputs.value }}
        key: testbed-${{ matrix.os }}-${{ hashFiles('testbed') }}
    - name: Verify or build the testbed
      if: steps.cache-key.outputs.cache-hit != 'true'
      # The argument tells the script we are in caching mode
      run: testbed/build.sh
  tests:
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    needs: [testbed,package]
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest,ubuntu-latest,windows-latest]
        pyver: [3.6,3.7,3.8,2.7]
    steps:
    - name: Retrieve the source code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - id: conda-root
      name: Set CONDA_ROOT
      run: |
          CONDA_ROOT=$(dirname $GITHUB_WORKSPACE)/conda
          echo "::set-output name=value::$CONDA_ROOT"
          echo "::set-env name=CONDA_ROOT::$CONDA_ROOT"
          echo "CONDA_ROOT: $CONDA_ROOT"
    - name: Retrieve the testbed
      uses: actions/cache@v2
      with:
        path: ${{ steps.conda-root.outputs.value }}
        key: testbed-${{ matrix.os }}-${{ hashFiles('testbed') }}
    - name: Verify or build the testbed
      run: testbed/build.sh
    - name: Download the build artifact
      uses: actions/download-artifact@v2
      with:
        name: package-${{ github.sha }}
        path: conda-bld
    - name: Create the test environment
      run: |
        mkdir -p ~/.conda
        mv conda-bld $CONDA_ROOT/conda-bld
        echo $CONDA_ROOT/ext1/ext2/env/test_env1 > ~/.conda/environments.txt
        source $CONDA_ROOT/etc/profile.d/conda.sh
        [ "${{ matrix.pyver }}" == "2.7" ] && BACKPORT="backports.functools_lru_cache"
        conda create -y -n ptest local::nb_conda_kernels python=${{ matrix.pyver }} pytest pytest-cov requests mock $BACKPORT
    - name: Test the package
      run: |
        source $CONDA_ROOT/etc/profile.d/conda.sh
        conda activate ptest
        pytest -v --cov=nb_conda_kernels tests || exit -1
  upload:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: tests
    env:
      ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
    steps:
    - name: Download the build artifact
      uses: actions/download-artifact@v2
      with:
        name: package-${{ github.sha }}
        path: conda-bld
    - name: Upload to anaconda.org
      run: |
        source /usr/share/miniconda/etc/profile.d/conda.sh
        conda activate
        conda install anaconda-client
        git tag describe --exact-match --tags HEAD || export LABEL="--label dev"
        anaconda --verbose --token $ANACONDA_TOKEN upload --user jupycon $LABEL conda-bld/*/*.tar.bz2 --force
 
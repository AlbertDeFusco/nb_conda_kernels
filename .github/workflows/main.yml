name: Build and test the package
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  testbed:
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest,macos-latest,windows-latest]
    steps:
    - name: Retrieve the source code
      uses: actions/checkout@v2
    - id: cache-key
      name: Retrieve cache key
      uses: actions/cache@v2
      # Create a small cache with a key built from the same hash
      # as the full testbed for quicker exits on a cache hit.
      # https://github.com/actions/cache/issues/363
      with:
        path: ./LICENSE
        key: key-${{ matrix.os }}-${{ hashFiles('conda-recipe') }}-1
    - id: cache
      name: Retrieve or create the conda cache
      if: steps.cache-key.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      with:
        path: ./conda
        key: testbed-${{ matrix.os }}-${{ hashFiles('conda-recipe') }}-1
    - name: Build testbed
      if: steps.cache-key.outputs.cache-hit != 'true'
      # The argument tells the script we are in caching mode
      run: conda-recipe/build_testbed.sh 1
  tests:
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    needs: testbed
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest,ubuntu-latest,windows-latest]
        pyver: [3.6,3.7,3.8,2.7]
    steps:
    - name: Retrieve the source code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Retrieve the testbed
      uses: actions/cache@v2
      with:
        path: ./conda
        key: testbed-${{ matrix.os }}-${{ hashFiles('conda-recipe') }}-1
    - name: Move the testbed into position or build it if the cache failed
      run: conda-recipe/build_testbed.sh
    - name: Build the package
      run: |
        source $CONDA_ROOT/etc/profile.d/conda.sh
        conda build conda-recipe --python=${{ matrix.pyver }}
    - name: Upload to anaconda.org
      if: github.event_name == 'push'
      env:
        ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      run: |
        source $CONDA_ROOT/etc/profile.d/conda.sh
        conda activate
        conda install anaconda-client
        git tag describe --exact-match --tags HEAD || export LABEL="--label dev"
        anaconda --verbose --token $ANACONDA_TOKEN upload --user jupycon $LABEL $CONDA_PREFIX/conda-bld/*/*.tar.bz2 --force
 